#!/bin/bash

# Everything has to succeed
set -o errexit
set -o nounset

_manifest() {
  # Generate build-info
  bin/tin.sh build-info-files
  echo 'x bin/tin.sh bin/tin.sh'
  find tin -type f -name \*.py -o -name \*.sh
}

Build() {
  # Everything here goes to stderr, so we don't have to redirect.
  _manifest | bin/tin.sh create --out $CDI_OUT/tin.tin

  # TODO: Organize this a bit better.  These can be used on their own.
  cp --verbose bin/multi.py $CDI_OUT/multi
  cp --verbose tin/py_imports.py $CDI_OUT/py-deps

  poly build doc/
}

# not called 'test' 
Test() {
  # TODO: need a tool that runs all the functions that start with test-* in a
  # shell script?  Or maybe just ./all?
  ./tin-test.sh smoke-test
}

Deploy() {
  cd $CDI_OUT

  # Make a release with the 'tin' directory in it
  local version=0.1

  mkdir --parents release/tin-$version

  local files="tin.tin py-deps multi"

  # No quoting!
  cp $files release/tin-$version

  # Create manifest with one file per line.
  echo $files | xargs -n1 echo > release/tin-$version/Manifest

  cd release
  local tar=tin-$version.tar.gz 
  tar --create --file $tar tin-$version

  which tree && tree

  local dest=$PBI_DEPLOY_DEST/tin/
  scp --verbose $tar $dest

  # TODO: Deploy app
}

"$@"
